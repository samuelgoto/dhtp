<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.kumbaya.android"
    android:versionCode="13"
    android:versionName="1.1" >

    <uses-sdk
        android:minSdkVersion="14"
        android:targetSdkVersion="21" />

    <!-- GCM connects to Google Services. -->
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- GCM requires a Google account. -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

    <!-- Keeps the processor from sleeping when a message is received. -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- Gives access to the user's raw phone number. -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    
    <!-- Gives access to the user's local area code. -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
	<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    
    <!-- Gives an alternative way to get the phone number.
         @see http://stackoverflow.com/questions/2480288
      -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    
    <!-- Useful to known where to start to look for friends on the kumbaya
         network, since you may have hundreds of contacts and:
         - when you join the network you'd like to see your close friends first
         - there is a higher chance that your friends joined the network
           compared to a random contact.
      -->
    <uses-permission android:name="android.permission.READ_CALL_LOG" />
     
    <!-- Gives access to the contacts. -->
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    
    <!-- Gives access to network state.
         This is helpful to sleep/wakeup kumbaya based on whether we are
         on a wifi connection or not.
      -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    
    <!--
     Creates a custom permission so only this app can receive its messages.

     NOTE: the permission *must* be called PACKAGE.permission.C2D_MESSAGE,
           where PACKAGE is the application's package name.
    -->
    <permission
        android:name="com.kumbaya.android.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.kumbaya.android.permission.C2D_MESSAGE" />

    <!-- This app has permission to register and receive data message. -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <!-- Allows kumbaya to start on boot. -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <application
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name" >
        <activity
            android:name="com.kumbaya.android.client.BootActivity"
            android:label="@string/app_name"
            android:theme="@style/BootTheme"
             >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name="com.kumbaya.android.client.MainActivity"
            android:label="@string/app_name" >
        </activity>

        <activity
            android:name="com.kumbaya.android.client.DebugActivity"
            android:theme="@style/BootTheme"
            android:label="@string/app_name" >
        </activity>
        
        <!--
          BroadcastReceiver that will receive intents from GCM
          services and handle them to the custom IntentService.

          The com.google.android.c2dm.permission.SEND permission is necessary
          so only GCM services can send data messages for the app.
        -->
        <receiver
            android:name="com.kumbaya.android.client.sdk.LocalGCMBroadcastReceiver"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>

                <!-- Receives the actual messages. -->
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <!-- Receives the registration id. -->
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />

                <category android:name="com.google.android.gcm.demo.app" />
            </intent-filter>
        </receiver>

        <receiver
            android:name="com.kumbaya.android.client.sdk.BootReceiver"
            android:enabled="true"
            android:permission="android.permission.RECEIVE_BOOT_COMPLETED" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>

        <!--
          Application-specific subclass of GCMBaseIntentService that will
          handle received messages.

          By default, it must be named .GCMIntentService, unless the
          application uses a custom BroadcastReceiver that redefines its name.
        -->
        <service
            android:name="com.kumbaya.android.client.sdk.GCMIntentService"
            android:enabled="true" />
        <service android:name="com.kumbaya.android.client.sdk.BackgroundService" />
    </application>

</manifest>